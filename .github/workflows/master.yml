name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: |
        cd CollectionManagement/
        dotnet restore CollectionManagement.sln
    - name: Build
      run: |
        cd CollectionManagement/
        dotnet build CollectionManagement.sln --configuration Release

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: |
        cd CollectionManagement/
        dotnet restore CollectionManagement.sln
    - name: Test
      run: |
        cd CollectionManagement/
        dotnet test --configuration Release
  
  dockerize:
    runs-on: ubuntu-latest
    needs: [build, test]
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build Docker Image
        run: docker build -t $DOCKER_USERNAME/collection .
      - name: Login to Docker Hub
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Push Docker image to Docker Hub
        run: docker push $DOCKER_USERNAME/collection

  deploy:
    runs-on: ubuntu-latest
    needs: dockerize  
    steps:
      - name: Connect to EC2 and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          key: ${{ secrets.SERVER_KEY }}
          username: ${{ secrets.SERVER_USERNAME }}
          script: |
            cd /home/ubuntu/collection
            docker-compose up -d --no-deps --build collection
